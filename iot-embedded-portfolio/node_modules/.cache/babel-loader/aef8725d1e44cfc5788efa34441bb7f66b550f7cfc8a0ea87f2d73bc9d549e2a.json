{"ast":null,"code":"var _jsxFileName = \"/workspaces/Portofolio-Rahandhika/iot-embedded-portfolio/src/components/Projects/Projects.jsx\";\nimport React from 'react';\nimport projectsData from '../../data/projects';\nimport './Projects.css'; // Assuming you will create a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-container\",\n      children: projectsData.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: project.image,\n          alt: project.title,\n          className: \"project-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"project-title\",\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"project-description\",\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-tech\",\n          children: project.technologies.map((tech, techIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tech-tag\",\n            children: tech\n          }, techIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-links\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: project.github,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"GitHub\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this), project.demo && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: project.demo,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"Live Demo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","projectsData","jsxDEV","_jsxDEV","Projects","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","project","index","src","image","alt","title","description","technologies","tech","techIndex","href","github","target","rel","demo","_c","$RefreshReg$"],"sources":["/workspaces/Portofolio-Rahandhika/iot-embedded-portfolio/src/components/Projects/Projects.jsx"],"sourcesContent":["import React from 'react';\nimport projectsData from '../../data/projects';\nimport './Projects.css'; // Assuming you will create a CSS file for styling\n\nconst Projects = () => {\n    return (\n        <section id=\"projects\">\n            <h2>My Projects</h2>\n            <div className=\"projects-container\">\n                {projectsData.map((project, index) => (\n                    <div className=\"project-card\" key={index}>\n                        <img src={project.image} alt={project.title} className=\"project-image\" />\n                        <h3 className=\"project-title\">{project.title}</h3>\n                        <p className=\"project-description\">{project.description}</p>\n                        <div className=\"project-tech\">\n                            {project.technologies.map((tech, techIndex) => (\n                                <span className=\"tech-tag\" key={techIndex}>{tech}</span>\n                            ))}\n                        </div>\n                        <div className=\"project-links\">\n                            <a href={project.github} target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>\n                            {project.demo && <a href={project.demo} target=\"_blank\" rel=\"noopener noreferrer\">Live Demo</a>}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </section>\n    );\n};\n\nexport default Projects;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,oBACID,OAAA;IAASE,EAAE,EAAC,UAAU;IAAAC,QAAA,gBAClBH,OAAA;MAAAG,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBP,OAAA;MAAKQ,SAAS,EAAC,oBAAoB;MAAAL,QAAA,EAC9BL,YAAY,CAACW,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC7BX,OAAA;QAAKQ,SAAS,EAAC,cAAc;QAAAL,QAAA,gBACzBH,OAAA;UAAKY,GAAG,EAAEF,OAAO,CAACG,KAAM;UAACC,GAAG,EAAEJ,OAAO,CAACK,KAAM;UAACP,SAAS,EAAC;QAAe;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzEP,OAAA;UAAIQ,SAAS,EAAC,eAAe;UAAAL,QAAA,EAAEO,OAAO,CAACK;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClDP,OAAA;UAAGQ,SAAS,EAAC,qBAAqB;UAAAL,QAAA,EAAEO,OAAO,CAACM;QAAW;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5DP,OAAA;UAAKQ,SAAS,EAAC,cAAc;UAAAL,QAAA,EACxBO,OAAO,CAACO,YAAY,CAACR,GAAG,CAAC,CAACS,IAAI,EAAEC,SAAS,kBACtCnB,OAAA;YAAMQ,SAAS,EAAC,UAAU;YAAAL,QAAA,EAAkBe;UAAI,GAAhBC,SAAS;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAc,CAC1D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNP,OAAA;UAAKQ,SAAS,EAAC,eAAe;UAAAL,QAAA,gBAC1BH,OAAA;YAAGoB,IAAI,EAAEV,OAAO,CAACW,MAAO;YAACC,MAAM,EAAC,QAAQ;YAACC,GAAG,EAAC,qBAAqB;YAAApB,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,EAC5EG,OAAO,CAACc,IAAI,iBAAIxB,OAAA;YAAGoB,IAAI,EAAEV,OAAO,CAACc,IAAK;YAACF,MAAM,EAAC,QAAQ;YAACC,GAAG,EAAC,qBAAqB;YAAApB,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9F,CAAC;MAAA,GAZyBI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAanC,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB,CAAC;AAACkB,EAAA,GAxBIxB,QAAQ;AA0Bd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}